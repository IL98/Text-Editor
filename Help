HELP
1.
2.Группа команд просмотра текста
Команда set tabwidth:
Данная команда регулирует число пробелов используемое при отображении. По умолчанию значение 8. пример команды: set tabwidth 4.

Команда set numbers:
Команда включает или выключает режим, когда слева перед текстом в момент работы.
Данная команда принимает на вход аргумент yes или no

Команда print pages:
Команда по экранного просмотра всего текста (сверху вниз и слева направо). Просмотр
следующего экрана по нажатию пробел. Выход из команды по нажатию `q', либо исчерпании
строк в тексте. В случае запуска с перенаправленным выводом в файл, текст должен быть выведен без приостановок на ожидание символа пробел и символы табуляции не должны быть заменены символами пробел.

Команда print range:
Данная команда используется для просмотра диапазона строк. После указания имени команды следуют номера выводящихся строк. Номера разделены пробельными символами и отделены от имени команды пробельными символами, исключая перевод строки. Если второе
число в диапазоне не указано, то считается что вывод происходит от номера строки, заданной
первым числом, до конца текста. если первое число тоже не указано, то печатается весь текст.
Cтроки нумеруются начиная с единицы.

Команда set wrap:
Данная команда принимает на вход аргумент yes или no переключает режим отображения между "длинные строки обрезаются" и "длинные строки продолжаются". По умолчанию должен быть установлен режим "длинные строки продолжаются", а команда set wrap no, должна переводить в режим "длинные строки обрезаются".


2. Группа команд вставки строк:
Команда insert after:
Производит вставку строки или группы строк после N-ой. Сперва указывается номер строки (формат по аналогии с предыдущей группой команд), а затем в двойных кавычках сама вставляемая строка. Если номер пропущен происходит вставка в конец текста. Если N равно 0, то в начало текста. Пример команды:
insert after 3 "папа у Васи силён в\n \"математике\""
Для вставки группы строк используются три идущие подряд двойные кавычки, которые могут начинаться с новой строки, и заканчиваются так же тремя подряд двойными кавычками.
В целом аналогично тому, как это устроено в языке программирования Python. пример:
insert after """
/*
* Здесь будет конец моей
* программы на Си.
* Спасибо, что дочитали код.
*/
"""

3. Группа команд редактирования строк:
Команда edit string:
позволяет заменить символ в N-ой строке, начиная с M-ой позиции; после указания позиций следует заменяемый символ. Если необходимо вставить специальный символ, то можно использовать `\'. Если указана конструкция вне диапазона, то необходимо выдать сообщение
об ошибке и замену не производить (сам редактор должен при этом продолжать свою работу, то есть выдать приглашение ко вводу следующей команды). Пример команды: 
edit string 2 60000 ё 
заменит символ во второй строке в позиции 60000
на символ `ё'.

Команда insert symbol
Команда аналогична edit string, но символ она вставляет в нужную позицию, а не заменяет. Если происходит "выход" за диапазон вправо то вставка в конец; если за диапазон влево то вставка в начало.

Команда replace substring:
Команда ищет и заменяет подстроки в диапазоне строк. После имени команды идёт диапазон строк, так же как и для команды print range (если диапазон не указан, то поиск и замена производятся во всём тексте), затем две строки в двойных кавычках, возможно каждая на новой строке. Первая из них строка образец, которая будет найдена в тексте, следующая строка, на которую будет производится замена.
Вместо строки образца может присутствовать символ `^' это означает, что строку нужно приписать в начало каждой строки из диапазона, или символ `$' это означает что приписать в конец каждой строки из диапазона.

Команда delete range:
Удаляет строки. Указывается диапазон, аналогично команде print range. При этом первое значение не может быть пропущено и не может быть равным 0.

Команда delete braces
Позволяет удалить группы символов, расположенные между фигурными скобками `{' и
`}'. Скобки тоже должны быть удалены. В качестве аргумента указывается диапазон строк, если он не указан, то удаление производится во всём тексте. Если открывающая скобка началась на одной строке, а закрывающая на другой, то содержимое между строками должно
быть удалено, а начало строки, где встретилась первая `{' должно быть склеено со строкой, где встретилась парная к ней `}'. Если закрывающая `}' так и не встретилась, то удаляем до конца текста.


4. Группа технических команд
Команда exit:
Осуществляет выход из текстового редактора. Если текст не сохранён в файл, то выдаётся предупреждение и выход не осуществляется. Если всё равно необходимо выйти, то вводится команда exit force.

Команда read:
Открывает файл, и в случае удачи замещает им все строчки текста. Имя файла не запоминается для последующего сохранения редактируемого текста в файл. Если текстом уже было ассоциировано какое-то имя, оно не будет затронуто командой. Имя файла в команде указывается в двойных кавычках.
Пример: read "каталог c описанием картинок/картинка 1.descr"


Команда open:
Аналогична read, за исключением того, что имя файла запоминается для последующего сохранения редактируемого текста в него.

Команда write:
Сохраняет текст в файл, если имя файла не указано, то запись происходит в "запомненное" имя файла. Если имя файла не ассоциировано, то диагностировать ошибку. Если имя файла было указано, а с текстом был ассоциирован файл, то ассоциация не изменяется. Если
ассоциация была пустой, то берётся ассоциация из данной команды.

Команда set name:
Задаёт ассоциацию с именем файла. Как и в команде read ассоциация задаётся строкой в двойных кавычках. Если строка пустая, то ассоциация с файлом удаляется.

Команда help:
Печатает помощь по текстовому редактору для пользователя. В режиме аналогичном команде print pages.

